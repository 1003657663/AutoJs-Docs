{
  "source": "..\\api\\qa.md",
  "modules": [
    {
      "textRaw": "Q & A",
      "name": "q_&_a",
      "modules": [
        {
          "textRaw": "如何定时运行脚本",
          "name": "如何定时运行脚本",
          "desc": "<p>点击脚本右边的菜单按钮-&gt;更多-&gt;定时任务即可定时运行脚本，但是必须保持Auto.js后台运行(自启动白名单、电源管理白名单等)。同时，可以在脚本的开头使用<code>device.wakeUp()</code>来唤醒屏幕；但是，Auto.js没有解锁屏幕的功能，因此难以在有锁屏密码的设备上达到效果。</p>\n",
          "type": "module",
          "displayName": "如何定时运行脚本"
        },
        {
          "textRaw": "如何把图片和脚本一起打包，或者打包多个脚本",
          "name": "如何把图片和脚本一起打包，或者打包多个脚本",
          "desc": "<p>如果除了单脚本以外还有其他脚本、图片、音乐等资源一起打包，则需要使用项目打包功能。</p>\n<ol>\n<li>新建一个文件夹，命名为项目名称。</li>\n<li>在该文件夹下新建脚本，或者移动脚本到该文件夹，命名为main.js，表示主脚本。脚本打包后将会从该脚本开始运行。</li>\n<li>把其他资源或脚本放在该文件夹，并通过相对路径引用。</li>\n<li>通过文件夹菜单的&quot;打包&quot;功能来打包该项目</li>\n</ol>\n<p>例如，主脚本要读取同一文件夹下的图片1.png，再执行找图，则可以通过<code>images.read(&quot;./1.png&quot;)</code>来读取，其中&quot;./1.png&quot;表示同一目录1.png图片；ui中的图片控件要引用同一文件夹的2.png图片则为<code>&lt;img src=&quot;file://2.png&quot;/&gt;</code>。Auto.js内置的函数和模块都支持相对路径，但是，其他情况则需要使用<code>files.path()</code>函数来把相对路径转换为绝对路径。</p>\n<p>目前Auto.js还不支持项目的图形化管理，后续会加入。</p>\n",
          "type": "module",
          "displayName": "如何把图片和脚本一起打包，或者打包多个脚本"
        },
        {
          "textRaw": "如何使打包的应用不显示主界面",
          "name": "如何使打包的应用不显示主界面",
          "desc": "<p>需要使用项目打包功能。</p>\n<ol>\n<li>新建一个文件夹，命名为项目名称。</li>\n<li>在该文件夹下新建脚本，或者移动脚本到该文件夹，命名为main.js，表示主脚本。脚本打包后将会从该脚本开始运行。</li>\n<li>在该文件夹下新建一个project.json的文件，其内容如下：<pre><code>{\n&quot;name&quot;: &quot;项目名称&quot;,\n&quot;versionName&quot;: &quot;1.0.0&quot;,\n&quot;versionCode&quot;: 1,\n&quot;packageName&quot;: &quot;org.autojs.example&quot;,\n&quot;main&quot;: &quot;main.js&quot;,\n&quot;launchConfig&quot;: {\n   &quot;hideLogs&quot;: true\n}\n}\n</code></pre>其中，项目名称改为自己的项目名称，&quot;org.autojs.example&quot;改成自己的包名，下面的&quot;launchConfig&quot;表示启动配置，&quot;hideLogs&quot;表示隐藏日志。</li>\n<li>通过文件夹菜单的&quot;打包&quot;功能来打包该项目</li>\n</ol>\n<p>有关项目打包和配置的更多信息，参见项目与项目配置(待补)。</p>\n",
          "type": "module",
          "displayName": "如何使打包的应用不显示主界面"
        }
      ],
      "properties": [
        {
          "textRaw": "Auto.js自带的模块和函数中没有的功能如何实现",
          "name": "js自带的模块和函数中没有的功能如何实现",
          "desc": "<p>由于Auto.js支持直接调用Android的API，对于Auto.js没有内置的函数，可以直接通过修改Android代码为JavaScript代码实现。例如旋转图片的Android代码为：</p>\n<pre><code>import android.graphics.Bitmap;\nimport android.graphics.Matrix;\n\npublic static Bitmap rotate(final Bitmap src,\n                            final int degrees,\n                            final float px,\n                            final float py) {\n    if (degrees == 0) return src;\n    Matrix matrix = new Matrix();\n    matrix.setRotate(degrees, px, py);\n    Bitmap ret = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);\n    return ret;\n}\n</code></pre><p>转换为JavaScript的代码后为：</p>\n<pre><code>importClass(android.graphics.Bitmap);\nimportClass(android.graphics.Matrix);\n\nfunction rotate(src, degrees, px, py){\n    if (degrees == 0) return src;\n    var matrix = new Matrix();\n    matrix.setRotate(degrees, px, py);\n    var ret = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);\n    return ret;\n}\n</code></pre><p>有关调用Android和Java的API的更多信息，参见<a href=\"https://developer.mozilla.org/zh-CN/docs/Mozilla/Projects/Rhino/Scripting_Java\">Work with Java</a>。</p>\n"
        }
      ],
      "type": "module",
      "displayName": "Q & A"
    }
  ]
}